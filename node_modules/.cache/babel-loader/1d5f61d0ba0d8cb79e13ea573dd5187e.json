{"ast":null,"code":"//     treeify.js\n//     Luke Plaster <notatestuser@gmail.com>\n//     https://github.com/notatestuser/treeify.js\n// do the universal module definition dance\n(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.treeify = factory();\n  }\n})(this, function () {\n  function makePrefix(key, last) {\n    var str = last ? '└' : '├';\n\n    if (key) {\n      str += '─ ';\n    } else {\n      str += '──┐';\n    }\n\n    return str;\n  }\n\n  function filterKeys(obj, hideFunctions) {\n    var keys = [];\n\n    for (var branch in obj) {\n      // always exclude anything in the object's prototype\n      if (!obj.hasOwnProperty(branch)) {\n        continue;\n      } // ... and hide any keys mapped to functions if we've been told to\n\n\n      if (hideFunctions && typeof obj[branch] === \"function\") {\n        continue;\n      }\n\n      keys.push(branch);\n    }\n\n    return keys;\n  }\n\n  function growBranch(key, root, last, lastStates, showValues, hideFunctions, callback) {\n    var line = '',\n        index = 0,\n        lastKey,\n        circular,\n        lastStatesCopy = lastStates.slice(0);\n\n    if (lastStatesCopy.push([root, last]) && lastStates.length > 0) {\n      // based on the \"was last element\" states of whatever we're nested within,\n      // we need to append either blankness or a branch to our line\n      lastStates.forEach(function (lastState, idx) {\n        if (idx > 0) {\n          line += (lastState[1] ? ' ' : '│') + '  ';\n        }\n\n        if (!circular && lastState[0] === root) {\n          circular = true;\n        }\n      }); // the prefix varies based on whether the key contains something to show and\n      // whether we're dealing with the last element in this collection\n\n      line += makePrefix(key, last) + key; // append values and the circular reference indicator\n\n      showValues && (typeof root !== 'object' || root instanceof Date) && (line += ': ' + root);\n      circular && (line += ' (circular ref.)');\n      callback(line);\n    } // can we descend into the next item?\n\n\n    if (!circular && typeof root === 'object') {\n      var keys = filterKeys(root, hideFunctions);\n      keys.forEach(function (branch) {\n        // the last key is always printed with a different prefix, so we'll need to know if we have it\n        lastKey = ++index === keys.length; // hold your breath for recursive action\n\n        growBranch(branch, root[branch], lastKey, lastStatesCopy, showValues, hideFunctions, callback);\n      });\n    }\n  }\n\n  ; // --------------------\n\n  var Treeify = {}; // Treeify.asLines\n  // --------------------\n  // Outputs the tree line-by-line, calling the lineCallback when each one is available.\n\n  Treeify.asLines = function (obj, showValues, hideFunctions, lineCallback) {\n    /* hideFunctions and lineCallback are curried, which means we don't break apps using the older form */\n    var hideFunctionsArg = typeof hideFunctions !== 'function' ? hideFunctions : false;\n    growBranch('.', obj, false, [], showValues, hideFunctionsArg, lineCallback || hideFunctions);\n  }; // Treeify.asTree\n  // --------------------\n  // Outputs the entire tree, returning it as a string with line breaks.\n\n\n  Treeify.asTree = function (obj, showValues, hideFunctions) {\n    var tree = '';\n    growBranch('.', obj, false, [], showValues, hideFunctions, function (line) {\n      tree += line + '\\n';\n    });\n    return tree;\n  }; // --------------------\n\n\n  return Treeify;\n});","map":{"version":3,"names":["root","factory","exports","module","define","amd","treeify","makePrefix","key","last","str","filterKeys","obj","hideFunctions","keys","branch","hasOwnProperty","push","growBranch","lastStates","showValues","callback","line","index","lastKey","circular","lastStatesCopy","slice","length","forEach","lastState","idx","Date","Treeify","asLines","lineCallback","hideFunctionsArg","asTree","tree"],"sources":["/Users/yabuch/Desktop/オムニMMMS/shigo-gene-main/shigo_gene_minting_dapp/node_modules/treeify/treeify.js"],"sourcesContent":["//     treeify.js\n//     Luke Plaster <notatestuser@gmail.com>\n//     https://github.com/notatestuser/treeify.js\n\n// do the universal module definition dance\n(function (root, factory) {\n\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.treeify = factory();\n  }\n\n}(this, function() {\n\n  function makePrefix(key, last) {\n    var str = (last ? '└' : '├');\n    if (key) {\n      str += '─ ';\n    } else {\n      str += '──┐';\n    }\n    return str;\n  }\n\n  function filterKeys(obj, hideFunctions) {\n    var keys = [];\n    for (var branch in obj) {\n      // always exclude anything in the object's prototype\n      if (!obj.hasOwnProperty(branch)) {\n        continue;\n      }\n      // ... and hide any keys mapped to functions if we've been told to\n      if (hideFunctions && ((typeof obj[branch])===\"function\")) {\n        continue;\n      }\n      keys.push(branch);\n    }\n    return keys;\n  }\n\n  function growBranch(key, root, last, lastStates, showValues, hideFunctions, callback) {\n    var line = '', index = 0, lastKey, circular, lastStatesCopy = lastStates.slice(0);\n\n    if (lastStatesCopy.push([ root, last ]) && lastStates.length > 0) {\n      // based on the \"was last element\" states of whatever we're nested within,\n      // we need to append either blankness or a branch to our line\n      lastStates.forEach(function(lastState, idx) {\n        if (idx > 0) {\n          line += (lastState[1] ? ' ' : '│') + '  ';\n        }\n        if ( ! circular && lastState[0] === root) {\n          circular = true;\n        }\n      });\n\n      // the prefix varies based on whether the key contains something to show and\n      // whether we're dealing with the last element in this collection\n      line += makePrefix(key, last) + key;\n\n      // append values and the circular reference indicator\n      showValues && (typeof root !== 'object' || root instanceof Date) && (line += ': ' + root);\n      circular && (line += ' (circular ref.)');\n\n      callback(line);\n    }\n\n    // can we descend into the next item?\n    if ( ! circular && typeof root === 'object') {\n      var keys = filterKeys(root, hideFunctions);\n      keys.forEach(function(branch){\n        // the last key is always printed with a different prefix, so we'll need to know if we have it\n        lastKey = ++index === keys.length;\n\n        // hold your breath for recursive action\n        growBranch(branch, root[branch], lastKey, lastStatesCopy, showValues, hideFunctions, callback);\n      });\n    }\n  };\n\n  // --------------------\n\n  var Treeify = {};\n\n  // Treeify.asLines\n  // --------------------\n  // Outputs the tree line-by-line, calling the lineCallback when each one is available.\n\n  Treeify.asLines = function(obj, showValues, hideFunctions, lineCallback) {\n    /* hideFunctions and lineCallback are curried, which means we don't break apps using the older form */\n    var hideFunctionsArg = typeof hideFunctions !== 'function' ? hideFunctions : false;\n    growBranch('.', obj, false, [], showValues, hideFunctionsArg, lineCallback || hideFunctions);\n  };\n\n  // Treeify.asTree\n  // --------------------\n  // Outputs the entire tree, returning it as a string with line breaks.\n\n  Treeify.asTree = function(obj, showValues, hideFunctions) {\n    var tree = '';\n    growBranch('.', obj, false, [], showValues, hideFunctions, function(line) {\n      tree += line + '\\n';\n    });\n    return tree;\n  };\n\n  // --------------------\n\n  return Treeify;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}