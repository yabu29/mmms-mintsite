{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hardfork = exports.Chain = exports.CustomChain = void 0;\n\nvar events_1 = require(\"events\");\n\nvar crc_32_1 = require(\"crc-32\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n\nvar eips_1 = require(\"./eips\");\n\nvar CustomChain;\n\n(function (CustomChain) {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n\n  CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n\n  CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n\n  CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\n\nvar Chain;\n\n(function (Chain) {\n  Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n  Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n  Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n  Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n  Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n  Chain[Chain[\"Calaveras\"] = 123] = \"Calaveras\";\n})(Chain = exports.Chain || (exports.Chain = {}));\n\nvar Hardfork;\n\n(function (Hardfork) {\n  Hardfork[\"Chainstart\"] = \"chainstart\";\n  Hardfork[\"Homestead\"] = \"homestead\";\n  Hardfork[\"Dao\"] = \"dao\";\n  Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n  Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n  Hardfork[\"Byzantium\"] = \"byzantium\";\n  Hardfork[\"Constantinople\"] = \"constantinople\";\n  Hardfork[\"Petersburg\"] = \"petersburg\";\n  Hardfork[\"Istanbul\"] = \"istanbul\";\n  Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n  Hardfork[\"Berlin\"] = \"berlin\";\n  Hardfork[\"London\"] = \"london\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\n\n\nvar Common =\n/** @class */\nfunction (_super) {\n  __extends(Common, _super);\n  /**\n   * @constructor\n   */\n\n\n  function Common(opts) {\n    var _a, _b;\n\n    var _this = _super.call(this) || this;\n\n    _this._supportedHardforks = [];\n    _this._eips = [];\n    _this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];\n    _this._chainParams = _this.setChain(opts.chain);\n    _this.DEFAULT_HARDFORK = (_b = _this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : Hardfork.Istanbul;\n    _this._hardfork = _this.DEFAULT_HARDFORK;\n\n    if (opts.supportedHardforks) {\n      _this._supportedHardforks = opts.supportedHardforks;\n    }\n\n    if (opts.hardfork) {\n      _this.setHardfork(opts.hardfork);\n    }\n\n    if (opts.eips) {\n      _this.setEIPs(opts.eips);\n    }\n\n    return _this;\n  }\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n\n\n  Common.custom = function (chainParamsOrName, opts) {\n    var _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n\n    var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n\n    standardChainParams['name'] = 'custom-chain';\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common(__assign({\n        chain: __assign(__assign({}, standardChainParams), chainParamsOrName)\n      }, opts));\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom({\n          name: CustomChain.PolygonMainnet,\n          chainId: 137,\n          networkId: 137\n        });\n      }\n\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom({\n          name: CustomChain.PolygonMumbai,\n          chainId: 80001,\n          networkId: 80001\n        });\n      }\n\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom({\n          name: CustomChain.ArbitrumRinkebyTestnet,\n          chainId: 421611,\n          networkId: 421611\n        });\n      }\n\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom({\n          name: CustomChain.xDaiChain,\n          chainId: 100,\n          networkId: 100\n        });\n      }\n\n      throw new Error(\"Custom chain \" + chainParamsOrName + \" not supported\");\n    }\n  };\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common({\n      chain: __assign(__assign({}, standardChainParams), customChainParams),\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks\n    });\n  };\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n\n\n  Common.isSupportedChainId = function (chainId) {\n    var initializedChains = chains_1._getInitializedChains();\n\n    return Boolean(initializedChains['names'][chainId.toString()]);\n  };\n\n  Common._getChainParams = function (chain, customChains) {\n    var initializedChains = chains_1._getInitializedChains(customChains);\n\n    if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n      chain = chain.toString();\n\n      if (initializedChains['names'][chain]) {\n        var name_1 = initializedChains['names'][chain];\n        return initializedChains[name_1];\n      }\n\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain];\n    }\n\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    var e_1, _a;\n\n    if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n      this._chainParams = Common._getChainParams(chain, this._customChains);\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n      }\n\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      try {\n        for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n          var param = required_1_1.value;\n\n          if (chain[param] === undefined) {\n            throw new Error(\"Missing required chain parameter: \" + param);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    var e_2, _a;\n\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var existing = false;\n\n    try {\n      for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n        var hfChanges = HARDFORK_CHANGES_1_1.value;\n\n        if (hfChanges[0] === hardfork) {\n          if (this._hardfork !== hardfork) {\n            this._hardfork = hardfork;\n            this.emit('hardforkChanged', hardfork);\n          }\n\n          existing = true;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    if (!existing) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Returns the hardfork based on the block number provided\n   * @param blockNumber\n   * @returns The name of the HF\n   */\n\n\n  Common.prototype.getHardforkByBlockNumber = function (blockNumber) {\n    var e_3, _a;\n\n    blockNumber = ethereumjs_util_1.toType(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    var hardfork = Hardfork.Chainstart;\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value; // Skip comparison for not applied HFs\n\n        if (hf.block === null) {\n          continue;\n        }\n\n        if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n          hardfork = hf.name;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return hardfork;\n  };\n  /**\n   * Sets a new hardfork based on the block number provided\n   * @param blockNumber\n   * @returns The name of the HF set\n   */\n\n\n  Common.prototype.setHardforkByBlockNumber = function (blockNumber) {\n    blockNumber = ethereumjs_util_1.toType(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    var hardfork = this.getHardforkByBlockNumber(blockNumber);\n    this.setHardfork(hardfork);\n    return hardfork;\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    if (onlySupported === void 0) {\n      onlySupported = true;\n    }\n\n    if (!hardfork) {\n      hardfork = this._hardfork;\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var e_4, _a;\n\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n        var hf = hfs_1_1.value;\n        if (hf['name'] === hardfork) return hf;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    var e_5, _a;\n\n    if (this._supportedHardforks.length > 0) {\n      try {\n        for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var supportedHf = _c.value;\n          if (hardfork === supportedHf) return true;\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n\n\n  Common.prototype.setEIPs = function (eips) {\n    var e_6, _a;\n\n    var _this = this;\n\n    if (eips === void 0) {\n      eips = [];\n    }\n\n    var _loop_1 = function (eip) {\n      if (!(eip in eips_1.EIPs)) {\n        throw new Error(eip + \" not supported\");\n      }\n\n      var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n\n      if (!minHF) {\n        throw new Error(eip + \" cannot be activated on hardfork \" + this_1.hardfork() + \", minimumHardfork: \" + minHF);\n      }\n\n      if (eips_1.EIPs[eip].requiredEIPs) {\n        // eslint-disable-next-line prettier/prettier\n        eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n          if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n            throw new Error(eip + \" requires EIP \" + elem + \", but is not included in the EIP list\");\n          }\n        });\n      }\n    };\n\n    var this_1 = this;\n\n    try {\n      for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n        var eip = eips_2_1.value;\n\n        _loop_1(eip);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    this._eips = eips;\n  };\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.param = function (topic, name) {\n    var e_7, _a; // TODO: consider the case that different active EIPs\n    // can change the same parameter\n\n\n    var value = null;\n\n    try {\n      for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var eip = _c.value;\n        value = this.paramByEIP(topic, name, eip);\n\n        if (value !== null) {\n          return value;\n        }\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    return this.paramByHardfork(topic, name, this._hardfork);\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n    var e_8, _a, e_9, _b;\n\n    hardfork = this._chooseHardfork(hardfork);\n    var value = null;\n\n    try {\n      for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n        var hfChanges = HARDFORK_CHANGES_2_1.value; // EIP-referencing HF file (e.g. berlin.json)\n\n        if (hfChanges[1].hasOwnProperty('eips')) {\n          // eslint-disable-line\n          var hfEIPs = hfChanges[1]['eips'];\n\n          try {\n            for (var hfEIPs_1 = (e_9 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n              var eip = hfEIPs_1_1.value;\n              var valueEIP = this.paramByEIP(topic, name, eip);\n              value = valueEIP !== null ? valueEIP : value;\n            }\n          } catch (e_9_1) {\n            e_9 = {\n              error: e_9_1\n            };\n          } finally {\n            try {\n              if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n            } finally {\n              if (e_9) throw e_9.error;\n            }\n          } // Paramater-inlining HF file (e.g. istanbul.json)\n\n        } else {\n          if (!hfChanges[1][topic]) {\n            throw new Error(\"Topic \" + topic + \" not defined\");\n          }\n\n          if (hfChanges[1][topic][name] !== undefined) {\n            value = hfChanges[1][topic][name].v;\n          }\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByEIP = function (topic, name, eip) {\n    if (!(eip in eips_1.EIPs)) {\n      throw new Error(eip + \" not supported\");\n    }\n\n    var eipParams = eips_1.EIPs[eip];\n\n    if (!(topic in eipParams)) {\n      throw new Error(\"Topic \" + topic + \" not defined\");\n    }\n\n    if (eipParams[topic][name] === undefined) {\n      return null;\n    }\n\n    var value = eipParams[topic][name].v;\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.paramByHardfork(topic, name, hardfork);\n  };\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n\n\n  Common.prototype.isActivatedEIP = function (eip) {\n    var e_10, _a;\n\n    if (this.eips().includes(eip)) {\n      return true;\n    }\n\n    try {\n      for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n        var hfChanges = HARDFORK_CHANGES_3_1.value;\n        var hf = hfChanges[1];\n\n        if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n          if (hf['eips'].includes(eip)) {\n            return true;\n          }\n        }\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    var _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    blockNumber = ethereumjs_util_1.toType(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlockBN(hardfork);\n\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    var e_11, _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    try {\n      for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n        var hf = hardforks_2_1.value;\n        if (hf['name'] === hardfork1) posHf1 = index;\n        if (hf['name'] === hardfork2) posHf2 = index;\n        index += 1;\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n\n    return posHf1 >= posHf2 && posHf2 !== -1;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    var e_12, _a;\n\n    var _b;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    try {\n      for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var hf = _d.value;\n        if (hf['name'] === hardfork && hf['block'] !== null) return true;\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    var e_13, _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n        var hf = hfs_2_1.value;\n        if (hf['block'] === null) continue;\n        if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n        if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n        activeHardforks.push(hf);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   * @deprecated Please use hardforkBlockBN() for large number support\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    return ethereumjs_util_1.toType(this.hardforkBlockBN(hardfork), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return new ethereumjs_util_1.BN(this._getHardfork(hardfork)['block']);\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = ethereumjs_util_1.toType(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this.hardforkBlockBN(hardfork).eq(blockNumber);\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use nextHardforkBlockBN() for large number support\n   */\n\n\n  Common.prototype.nextHardforkBlock = function (hardfork) {\n    var block = this.nextHardforkBlockBN(hardfork);\n    return block === null ? null : ethereumjs_util_1.toType(block, ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n\n\n  Common.prototype.nextHardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var hfBlock = this.hardforkBlockBN(hardfork); // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n\n    var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n      var block = new ethereumjs_util_1.BN(hf.block);\n      return block.gt(hfBlock) && acc === null ? block : acc;\n    }, null);\n    return nextHfBlock;\n  };\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = ethereumjs_util_1.toType(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n  };\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n\n\n  Common.prototype._calcForkHash = function (hardfork) {\n    var e_14, _a;\n\n    var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n    var hfBuffer = Buffer.alloc(0);\n    var prevBlock = 0;\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        var block = hf.block; // Skip for chainstart (0), not applied HFs (null) and\n        // when already applied on same block number HFs\n\n        if (block !== 0 && block !== null && block !== prevBlock) {\n          var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n          hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n        }\n\n        if (hf.name === hardfork) break;\n        prevBlock = block;\n      }\n    } catch (e_14_1) {\n      e_14 = {\n        error: e_14_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_14) throw e_14.error;\n      }\n    }\n\n    var inputBuffer = Buffer.concat([genesis, hfBuffer]); // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n\n    var forkhash = ethereumjs_util_1.intToBuffer(crc_32_1.buf(inputBuffer) >>> 0).toString('hex');\n    return \"0x\" + forkhash;\n  };\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n\n\n  Common.prototype.forkHash = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    var data = this._getHardfork(hardfork);\n\n    if (data['block'] === null) {\n      var msg = 'No fork hash calculation possible for non-applied or future hardfork';\n      throw new Error(msg);\n    }\n\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash'];\n    }\n\n    return this._calcForkHash(hardfork);\n  };\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n\n\n  Common.prototype.hardforkForForkHash = function (forkHash) {\n    var resArray = this.hardforks().filter(function (hf) {\n      return hf.forkHash === forkHash;\n    });\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n\n\n  Common.prototype.dnsNetworks = function () {\n    return this._chainParams['dnsNetworks'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use chainIdBN() for large number support\n   */\n\n\n  Common.prototype.chainId = function () {\n    return ethereumjs_util_1.toType(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use networkIdBN() for large number support\n   */\n\n\n  Common.prototype.networkId = function () {\n    return ethereumjs_util_1.toType(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n  };\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n\n\n  Common.prototype.eips = function () {\n    return this._eips;\n  };\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"\n   */\n\n\n  Common.prototype.consensusType = function () {\n    return this._chainParams['consensus']['type'];\n  };\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type or\n   * \"clique\" for \"poa\" consensus type\n   */\n\n\n  Common.prototype.consensusAlgorithm = function () {\n    return this._chainParams['consensus']['algorithm'];\n  };\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   */\n\n\n  Common.prototype.consensusConfig = function () {\n    return this._chainParams['consensus'][this.consensusAlgorithm()];\n  };\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n\n\n  Common.prototype.copy = function () {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n  };\n\n  return Common;\n}(events_1.EventEmitter);\n\nexports.default = Common;","map":{"version":3,"mappings":"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","names":["CustomChain","exports","Chain","Hardfork","__extends","opts","_super","_this","_customChains","customChains","_a","_chainParams","setChain","chain","DEFAULT_HARDFORK","defaultHardfork","_b","Istanbul","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","Common","chainParamsOrName","baseChain","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","name","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","Error","customChainParams","initializedChains","chains_1","Boolean","toString","ethereumjs_util_1","isBN","name_1","length","required","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","hfChanges","emit","blockNumber","BN","Chainstart","hardforks","_c","hf","block","gte","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","supportedHf","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hasOwnProperty","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","hardforkGteHardfork","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","nextHfBlock","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","concat","inputBuffer","forkhash","crc_32_1","data","msg","_calcForkHash","forkHash","resArray","filter","chainIdBN","networkIdBN","consensusAlgorithm","Object","assign","create","getPrototypeOf","events_1"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}